head(meta)
head(sa.ann.fin)
colnames(sa.ann.fin)
head(identity)
head(identity(
head(identity)
colnames(identity)
str(income)
head(income)
income
head(income)
colnames(sa.ann.fin)
income
head(income)
summary(income)
str(summary)
str(profit))
str(profit)
str(assets)
str(borrowing)
str(ca)
str(expenses)
str(export)
str(employees(
str(employees)
colnames(sa.ann.fin)
grep("import",colnames(sa.ann.fin))
colnames(sa.ann.fin)[grep("import",colnames(sa.ann.fin))]
str(import)
head(import)
head(import)
head(long)
str(long)
head(long)
slotYear
unique(long$sa_finance1_year)
head(long)
table(long$sa_finance1_year)
slotYear
slotYear
head(long)
slotYear
head(long)
head(long)
 head(long)
slotYear
)
head(long)
long[which(long$sa_finance1_cocode== 488695),]
series <- long[which(long$sa_finance1_cocode== 488695),]
co
series
series$sa_finance1_cocode
series <- long
head(series)
str(co)
 i <- 1
i
co[[1]]
co
i
co[[2]]
names(co)
names(co[[2]])
co[[2]]
names(co)[2]
 series[which(series$sa_company_name=="2020 IMAGING INDIA LTD."),]
unique(series$sa_company_name)
co[[1]]
co[[2]]
str(series)
str(long))
str(long)
str(long)
install.packages("prodtestLP")
install.packages("prodtest")
library(prodtest)
install.packages("prodtest")
install.packages('prodtest', repos = '"https://cloud.r-project.org')
getOption('repos')
install.packages("zoo")
install.packages("prodtest")
install.packages("DEoptim")
head(longpd)
head(long)
head(longpd)
head(longpd)
prodestLP(longpd$lsales, longpd$lsalary, longpd$lgfa, longpd$lrawmat, longpd$sa_company_name, longpd$sa_finance1_year)
prodestLP
summary(longpd)
summary(longpd)
str(longpd)
table(longpd$year)
table(longpd$sa_finace1_year)
table(longpd$sa_finace1_year)
table(longpd$sa_finance1_year)
table(table(longpd$sa_company_name))
str(chilean)
nrow(longpd)
prodestLP(
LP.fit <- prodestLP(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2), chilean$sX,
chilean$pX, chilean$idvar, chilean$timevar)
LP.fit
prod(LP.fit)
prod
prod(LP.fit)
prod(LP.fit)
omega signature(object = 'prod')
signature(object = 'prod')
omega(object = 'prod')
omega(object = 'LP.fit')
omega(object = 'prod')
str(LP.fit)
lp
Sys.getenv("NUMBER_OF_PROCESSORS")
?Sys.getenv)
?Sys.getenv
library(parallel(
library(parallel)
detectCores()
install.packages("pglm")
install.packages("pglm")
?pglm
?pglm
pglm
pglm
install.packages("cquad")
head(lpex_data)
str(lpex_data)
head(lp)
pglm
thefunc
gauss.quad
head(lp)
head(lpex_data)
names(lpex_data)
head(lpex_data)
head(lpex_data)
head(lpex_data)
str(lpex_data)
colnames(lpex_data)
colnames(lpex_data)
str(lpex_data)
str(lpex_data)
str(dynprobit)
str(lpex_data)
head(lpex_data)
head(dynprobit)
str(dynprobit)
head(dynprobit,20)
head(dynprobit)
head(dynprobit)
